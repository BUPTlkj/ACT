name: ERAN CI (Linux)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: eran-linux-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  eran-linux:
    name: ERAN (Ubuntu 22.04)
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      CONDA_PKGS_DIRS: /tmp/conda_pkgs
      PIP_CACHE_DIR: /tmp/pip_cache
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUNBUFFERED: "1"
      TF_ENABLE_ONEDNN_OPTS: "0"
      ACT_CI_MODE: "true"
      PYTHONPATH: ${{ github.workspace }}

    steps:
      # 0) Free up disk space
      - name: Free disk space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Show space after cleanup
        run: df -hT

      # 1) Checkout repository (shallow)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive   # ensures modules/eran exists

      # 2) Miniconda setup
      - name: Set up Miniconda (mamba)
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.9"
          miniforge-variant: Miniforge3
          miniforge-version: "24.3.0-0"
          use-mamba: true

      # 3) Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgmp-dev libmpfr-dev
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      # 4) Create ERAN environment
      - name: Set up ACT environments (ERAN)
        shell: bash -l {0}
        run: |
          cd modules/setup/
          ACT_CI_MODE=true source setup.sh eran
          conda info
          conda list
          conda clean --all --yes
          python -m pip cache purge || true

      # 5) Run ERAN verification
      - name: Run ERAN verification
        shell: bash -l {0}
        run: |
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate act-eran
          find "$GITHUB_WORKSPACE" -maxdepth 2 -name "__pycache__" -type d -exec rm -rf {} +
          cd "$GITHUB_WORKSPACE"
          python -m act.wrapper_exts.ext_runner \
            --verifier eran \
            --device cpu \
            --method deepzono \
            --model_path models/vnnmodels/MNIST/small_relu_mnist_cnn_model_1.onnx \
            --dataset mnist --spec_type local_lp \
            --start 0 --end 5 --epsilon 0.01 --norm inf \
            --mean 0.1307 --std 0.3081

      # 6) Upload logs on failure
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: eran-logs
          path: |
            **/act*.log
            **/eran*/**/*.log
            **/*.tmp
          retention-days: 7

      # 7) Final cleanup
      - name: Final cleanup and space report
        shell: bash -l {0}
        run: |
          conda clean --all --yes || true
          python -m pip cache purge || true
          rm -rf /tmp/conda_pkgs /tmp/pip_cache || true
          find "$GITHUB_WORKSPACE" -maxdepth 2 -name "__pycache__" -type d -exec rm -rf {} +
          df -hT
